/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.tools;

import java.awt.Component;
import java.awt.event.ActionEvent;
import java.util.List;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import server.MapleItemInformationProvider;
import server.shops.MapleShopFactory;
import tools.shop.Merchandise;
import tools.shop.ShopNpc;
import tools.shop.ShopNpcManager;
/**
 *
 * @author 疯神
 */
public class 商店管理控制台2 extends javax.swing.JFrame {
    /**
     * Creates new form WinStart
     */
    public 商店管理控制台2() {
        ImageIcon icon = new ImageIcon(getClass().getClassLoader().getResource("Image/Icon.png"));
        setIconImage(icon.getImage());
        setTitle("商店管理控制台");
        this.setDefaultCloseOperation(2);
        initComponents();
        final List<ShopNpc> shopnpcs = ShopNpcManager.getAllShopNpc();
        final Vector<ShopNpc> shopNpcVector = (Vector<ShopNpc>)new Vector();
        shopNpcVector.add(new ShopNpc(0, 0, "请选择商店npc"));
        for (final ShopNpc sn : shopnpcs) {
            shopNpcVector.add(sn);
        }
        this.jComboBox1.setModel((ComboBoxModel<ShopNpc>)new DefaultComboBoxModel(shopNpcVector));
    } 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane27 = new javax.swing.JScrollPane();
        商品列表1 = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();

        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("商店管理控制台"));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("查询商店信息"));

        jButton1.setText("更新商店");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("添加物品");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        商品列表1.setFont(new java.awt.Font("幼圆", 0, 15)); // NOI18N
        商品列表1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "商店序号", "物品名称", "物品代码", "价格", "图标"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        商品列表1.setRowHeight(30);
        商品列表1.getTableHeader().setReorderingAllowed(false);
        商品列表1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                商品列表1MouseClicked(evt);
            }
        });
        jScrollPane27.setViewportView(商品列表1);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "请选择商店npc", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jButton3.setText("删除物品");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        jTextField3.setText("jTextField3");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane27, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 539, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane27, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            final int merchantId = Integer.parseInt(String.valueOf(this.商品列表1.getValueAt(this.商品列表1.getSelectedRow(), 0)));
            final int itemId = Integer.parseInt(String.valueOf(this.jTextField2.getText()));
            final int price = Integer.parseInt(String.valueOf(this.jTextField3.getText()));
            final Merchandise merchandise = new Merchandise(merchantId, itemId, price );
            final int success = ShopNpcManager.updateShopData(merchandise);
            if (success == 0) {
                JOptionPane.showMessageDialog((Component)this, "更新失败");
            }
            else {
                JOptionPane.showMessageDialog((Component)this, "更新成功");
                MapleShopFactory.getInstance().clear();
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog((Component)this, "选择一项进行更新");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            final int shopId = Integer.parseInt(String.valueOf(this.jTextField1.getText()));
            final int itemId = Integer.parseInt(String.valueOf(this.jTextField2.getText()));
            final int price = Integer.parseInt(String.valueOf(this.jTextField3.getText()));
            final Merchandise merchandise = new Merchandise(shopId, itemId, price);
            final int success = ShopNpcManager.addShopData(merchandise);
            if (success == 0) {
                JOptionPane.showMessageDialog((Component)this, "添加失败");
            }
            else {
                JOptionPane.showMessageDialog((Component)this, "添加成功");
                MapleShopFactory.getInstance().clear();
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog((Component)this, "添加失败");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try {
            final int merchantId = Integer.parseInt(String.valueOf(this.商品列表1.getValueAt(this.商品列表1.getSelectedRow(), 0)));
            final int success = ShopNpcManager.deleteShopData(merchantId);
            if (success == 0) {
                JOptionPane.showMessageDialog((Component)this, "删除失败");
            }
            else {
                JOptionPane.showMessageDialog((Component)this, "删除成功");
                MapleShopFactory.getInstance().clear();
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog((Component)this, "选择一项进行删除");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        final ShopNpc npc = (ShopNpc)this.jComboBox1.getSelectedItem();
        if (npc.getNpcId() != 0) {
            for (int i = ((DefaultTableModel)(DefaultTableModel)this.商品列表1.getModel()).getRowCount() - 1; i >= 0; --i) {
                ((DefaultTableModel)(DefaultTableModel)this.商品列表1.getModel()).removeRow(i);
            }
            final List<Merchandise> merchandiseList = ShopNpcManager.getAllShopItem(npc.getShopId());
            for (final Merchandise m : merchandiseList) {
                final Vector<Object> merchandiseVector = (Vector<Object>)new Vector();
                merchandiseVector.add(Integer.valueOf(m.getShopId()));
                merchandiseVector.add(m.getItemName());
                merchandiseVector.add(Integer.valueOf(m.getItemId()));
                merchandiseVector.add(Integer.valueOf(m.getPrice()));
                merchandiseVector.add(Integer.valueOf(m.getItemId()));
                商品列表1.getColumnModel().getColumn(4).setCellRenderer(new MyTableCellRendererGoods());
                ((DefaultTableModel)(DefaultTableModel)this.商品列表1.getModel()).insertRow(this.商品列表1.getRowCount(), merchandiseVector);
            }
        }
    
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void 商品列表1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_商品列表1MouseClicked

        final String merchantId = String.valueOf(this.商品列表1.getValueAt(this.商品列表1.getSelectedRow(), 0));
        final String ItemName = String.valueOf(this.商品列表1.getValueAt(this.商品列表1.getSelectedRow(), 1));
        final String itemId = String.valueOf(this.商品列表1.getValueAt(this.商品列表1.getSelectedRow(), 2));
        final String price = String.valueOf(this.商品列表1.getValueAt(this.商品列表1.getSelectedRow(), 3));
        this.jTextField1.setText(ItemName);
        this.jTextField2.setText(itemId);
        this.jTextField3.setText(price);
    }//GEN-LAST:event_商品列表1MouseClicked
//   public void 商店列表(int type) 


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane27;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable 商品列表1;
    // End of variables declaration//GEN-END:variables
}
